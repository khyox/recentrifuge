name: Retest

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        on: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
        - on: ubuntu-20.04
          python-version: "3.6"

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 recentrifuge/ rcf remock retaxdump retest rextract --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. 
          flake8 recentrifuge/ rcf remock retaxdump retest rextract --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics
      - name: Test with retest
        run: |
          ./retest -d -l -r
      - run: echo "🍏 This job's status is ${{ job.status }}."
